<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.core.checkmis.CodeListDetailMapper">
  <resultMap id="BaseResultMap" type="com.core.model.checkmis.CodeListDetail">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="ID" jdbcType="NUMERIC" property="id" />
    <result column="MASTERID" jdbcType="NUMERIC" property="masterid" />
    <result column="KEY" jdbcType="VARCHAR" property="key" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="STATUS" jdbcType="VARCHAR" property="status" />
    <result column="SORT" jdbcType="NUMERIC" property="sort" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    ID, MASTERID, KEY, NAME, STATUS, SORT
  </sql>
  <select id="selectByExample" parameterType="com.core.model.checkmis.CodeListDetailExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from CHECKMIS.SYS_CODELIST_DETAIL
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from CHECKMIS.SYS_CODELIST_DETAIL
    where ID = #{id,jdbcType=NUMERIC}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from CHECKMIS.SYS_CODELIST_DETAIL
    where ID = #{id,jdbcType=NUMERIC}
  </delete>
  <delete id="deleteByExample" parameterType="com.core.model.checkmis.CodeListDetailExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from CHECKMIS.SYS_CODELIST_DETAIL
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.core.model.checkmis.CodeListDetail">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" resultType="long" order="BEFORE">
      select SEQ_CODE_LIST_DETAIL.nextval from dual
    </selectKey>
    insert into CHECKMIS.SYS_CODELIST_DETAIL (ID, MASTERID, KEY, 
      NAME, STATUS, SORT)
    values (#{id,jdbcType=NUMERIC}, #{masterid,jdbcType=NUMERIC}, #{key,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{sort,jdbcType=NUMERIC})
  </insert>
  <insert id="insertSelective" parameterType="com.core.model.checkmis.CodeListDetail">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into CHECKMIS.SYS_CODELIST_DETAIL
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="masterid != null">
        MASTERID,
      </if>
      <if test="key != null">
        KEY,
      </if>
      <if test="name != null">
        NAME,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="sort != null">
        SORT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=NUMERIC},
      </if>
      <if test="masterid != null">
        #{masterid,jdbcType=NUMERIC},
      </if>
      <if test="key != null">
        #{key,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=NUMERIC},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.core.model.checkmis.CodeListDetailExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from CHECKMIS.SYS_CODELIST_DETAIL
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update CHECKMIS.SYS_CODELIST_DETAIL
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=NUMERIC},
      </if>
      <if test="record.masterid != null">
        MASTERID = #{record.masterid,jdbcType=NUMERIC},
      </if>
      <if test="record.key != null">
        KEY = #{record.key,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        STATUS = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null">
        SORT = #{record.sort,jdbcType=NUMERIC},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update CHECKMIS.SYS_CODELIST_DETAIL
    set ID = #{record.id,jdbcType=NUMERIC},
      MASTERID = #{record.masterid,jdbcType=NUMERIC},
      KEY = #{record.key,jdbcType=VARCHAR},
      NAME = #{record.name,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=VARCHAR},
      SORT = #{record.sort,jdbcType=NUMERIC}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.core.model.checkmis.CodeListDetail">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update CHECKMIS.SYS_CODELIST_DETAIL
    <set>
      <if test="masterid != null">
        MASTERID = #{masterid,jdbcType=NUMERIC},
      </if>
      <if test="key != null">
        KEY = #{key,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        SORT = #{sort,jdbcType=NUMERIC},
      </if>
    </set>
    where ID = #{id,jdbcType=NUMERIC}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.core.model.checkmis.CodeListDetail">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update CHECKMIS.SYS_CODELIST_DETAIL
    set MASTERID = #{masterid,jdbcType=NUMERIC},
      KEY = #{key,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=VARCHAR},
      SORT = #{sort,jdbcType=NUMERIC}
    where ID = #{id,jdbcType=NUMERIC}
  </update>

    <select id="queryAllData" resultType="com.core.dto.DropDownDto">
		select b.code,a.name,a.key,a.status from sys_codelist_detail a left join sys_codelist b on a.masterid =b.id order by b.code,a.sort
	</select>
</mapper>